#define RS  2
#define E   3
#define D4  4
#define D5  5
#define D6  6
#define D7  7

#define mks_after_com 4000//4000
#define mks_strobe    5 //5

void send_LCD(byte RS_value,byte DB4_value,byte DB5_value,byte DB6_value,byte DB7_value) {

  digitalWrite(RS,RS_value);  // RS устанавливаем 0-у если идут команды, 1-у если идут данные
  digitalWrite(E, LOW);       // E устанавливаем в 0, пока нет стробирующего импульса

  digitalWrite(D4,DB4_value); // выставляем на DB4-DB7 логические нули и единицы
  digitalWrite(D5,DB5_value); // 
  digitalWrite(D6,DB6_value); // 
  digitalWrite(D7,DB7_value); // 

  digitalWrite(E, HIGH); // E устанавливаем в 1, есть стробирующего импульс
  delayMicroseconds(mks_strobe);  // задержка для стробирующего импульса, подбираем опытным путем
  digitalWrite(E, LOW);  // E устанавливаем в 0, нет стробирующего импульса  
  
};

void setup() {
  // put your setup code here, to run once:
  pinMode(RS,OUTPUT);
  pinMode(E,OUTPUT);  
  
  pinMode(D4,OUTPUT);
  pinMode(D5,OUTPUT);
  pinMode(D6,OUTPUT);
  pinMode(D7,OUTPUT);
  
  // ------------------------------ ИНИЦИАЛИЗАЦИЯ ДИСПЛЕЯ --------------------------------------
  delay(20);             // при запуске рекомендуется выждать 20 мс
  

  // ----- команда №6 (установка разрядности) посылаем 0x30 на D4-D7 ----- 
  send_LCD(0,1,1,0,0);              // RS=0, DB4=1, DB5=1, DB6=0, DB7=0
  delayMicroseconds(mks_after_com); // ожидаем 40мкс, время на обработку команд (см. таблицу)  
  // ----- конец команда №6 посылаем 0x30 на D4-D7 -----  

//////
//////
//////
 send_LCD(0,1,1,0,0);              // RS=0, DB4=1, DB5=1, DB6=0, DB7=0
  delayMicroseconds(mks_after_com); // ожидаем 40мкс, время на обработку команд (см. таблицу)  
  // ----- конец команда №6 посылаем 0x30 на D4-D7 -----  
  
  // ----- команда №6 (установка разрядности 4-е бита) посылаем 0x28 на D4-D7 -----
 send_LCD(0,1,1,0,0);              // RS=0, DB4=1, DB5=1, DB6=0, DB7=0
  delayMicroseconds(mks_after_com); // ожидаем 40мкс, время на обработку команд (см. таблицу)  
  // ----- конец команда №6 посылаем 0x30 на D4-D7 -----  
  
  // ----- команда №6 (установка разрядности 4-е бита) посылаем 0x28 на D4-D7 -----
////////
////////
////////

  
  //старший полубайт, отправляем 0x2
  send_LCD(0,0,1,0,0);              // RS=0, DB4=0, DB5=1, DB6=0, DB7=0
  delayMicroseconds(mks_after_com); // ожидаем 40мкс, время на обработку команд (см. таблицу)        
  
  //повторяем старший полубайт, отправляем 0x2, особенность HD44780, 
  send_LCD(0,0,1,0,0);              // RS=0, DB4=0, DB5=1, DB6=0, DB7=0
  
  //младший полубайт, отправляем 0x8
  send_LCD(0,0,0,0,1);              // RS=0, DB4=0, DB5=0, DB6=0, DB7=1
  delayMicroseconds(mks_after_com); // ожидаем 40мкс, время на обработку команд (см. таблицу)          
  // ----- конец команда №6 посылаем 0x28 на D4-D7 -----    
 
  // ----- команда №4 (выключение дисплея) посылаем 0x8 на D4-D7 -----
  
  //старший полубайт, отправляем 0x0
  send_LCD(0,0,0,0,0);              // RS=0, DB4=0, DB5=0, DB6=0, DB7=0
  //младший полубайт, отправляем 0x8  
  send_LCD(0,0,0,0,1);              // RS=0, DB4=0, DB5=0, DB6=0, DB7=1
  delayMicroseconds(mks_after_com); // ожидаем 40мкс, время на обработку команд (см. таблицу)  
  
  // ----- конец команда №4 (выключение дисплея) посылаем 0x8 на D4-D7 -----  

  // ----- команда №1 (сброс дисплея) посылаем 0x1 на D4-D7 -----
  
  //старший полубайт, отправляем 0x0
  send_LCD(0,0,0,0,0);              // RS=0, DB4=0, DB5=0, DB6=0, DB7=0
  //младший полубайт, отправляем 0x1  
  send_LCD(0,1,0,0,0);              // RS=0, DB4=1, DB5=0, DB6=0, DB7=0
  delayMicroseconds(mks_after_com); // ожидаем 40мкс, время на обработку команд (см. таблицу)    
  
  // ----- конец команда №1 (сброс дисплея) посылаем 0x1 на D4-D7 -----
  
  // ----- команда №3 (при записи курсор движется в право) посылаем 0x6 на D4-D7 -----
  
  //старший полубайт, отправляем 0x0
  send_LCD(0,0,0,0,0);              // RS=0, DB4=0, DB5=0, DB6=0, DB7=0
  //младший полубайт, отправляем 0x6  
  send_LCD(0,0,1,1,0);              // RS=0, DB4=0, DB5=1, DB6=1, DB7=0
  delayMicroseconds(mks_after_com); // ожидаем 40мкс, время на обработку команд (см. таблицу)  
 
  // ----- конец команда №3 (при записи курсор движется в право) посылаем 0x6 на D4-D7 -----

  // ----- команда №4 (включение дисплея) посылаем 0x0С на D4-D7 -----
  
  //старший полубайт, отправляем 0x0
  send_LCD(0,0,0,0,0);              // RS=0, DB4=0, DB5=0, DB6=0, DB7=0
  //младший полубайт, отправляем 0xС  
  send_LCD(0,0,0,1,1);              // RS=0, DB4=0, DB5=0, DB6=1, DB7=1
  delayMicroseconds(mks_after_com); // ожидаем 40мкс, время на обработку команд (см. таблицу)  

  // ----- конец команда №4 (включение дисплея) посылаем 0x0С на D4-D7 -----
 
  // -------------------------- КОНЕЦ ИНИЦИАЛИЗАЦИЯ ДИСПЛЕЯ ----------------------------------
 
  // ----- данные - символ 'S' посылаем 0x53 на D4-D7 -----
  
  //старший полубайт, отправляем 0x5
  send_LCD(1,1,0,1,0);              // RS=1, DB4=1, DB5=0, DB6=1, DB7=0
  //младший полубайт, отправляем 0x3  
  send_LCD(1,1,1,0,0);              // RS=1, DB4=1, DB5=1, DB6=0, DB7=0
  delayMicroseconds(mks_after_com); // ожидаем 40мкс, время на обработку команд (см. таблицу)  

  // ----- конец данные - символ 'S' посылаем 0x53 на D4-D7 -----

  // ----- данные - символ '-' посылаем 0x2D на D4-D7 -----
  
  //старший полубайт, отправляем 0x2
  send_LCD(1,0,1,0,0);              // RS=1, DB4=0, DB5=1, DB6=0, DB7=0
  //младший полубайт, отправляем 0xD  
  send_LCD(1,1,0,1,1);              // RS=1, DB4=1, DB5=1, DB6=0, DB7=0
  delayMicroseconds(mks_after_com); // ожидаем 40мкс, время на обработку команд (см. таблицу)  

  // ----- конец данные - символ '-' посылаем 0x2D на D4-D7 -----
  
  // ----- данные - символ 'E' посылаем 0x45 на D4-D7 -----
  
  //старший полубайт, отправляем 0x4
  send_LCD(1,0,0,1,0);              // RS=1, DB4=0, DB5=0, DB6=1, DB7=0
  //младший полубайт, отправляем 0x5
  send_LCD(1,1,0,1,0);              // RS=1, DB4=1, DB5=0, DB6=1, DB7=0
  delayMicroseconds(mks_after_com); // ожидаем 40мкс, время на обработку команд (см. таблицу)  

  // ----- конец данные - символ 'E' посылаем 0x45 на D4-D7 -----  

}

void loop() {
  delay(1000);
}
